{"version":3,"sources":["secret-field-watcher.js"],"names":["SecretFieldWatcher","parameters","evt","console","log","options","name","value","currentValue","target","background","document","querySelector","errorMessageSpan","parentElement","style","backgroundColor","errorMessage","innerHTML","parametersWithDefaults","Object","assign","foregroundColor","field","addEventListener","lookForFieldValue"],"mappings":";;;;;;IAAMA,kB,GACL;AAGA;AACA;AACA;AACA;AACA,4BAAYC,UAAZ,EAAwB;AAAA;;AAAA;;AAAA,mCANd,EAMc;;AAAA,6CAgCJ,UAACC,GAAD,EAAS;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAI,CAACC,OAAL,CAAaC,IAArC,EAA2C,KAAI,CAACD,OAAL,CAAaE,KAAxD;AACA,QAAMC,YAAY,GAAGN,GAAG,CAACO,MAAJ,CAAWF,KAAhC;AACA,QAAIG,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAjB;AACA,QAAIC,gBAAgB,GAAGX,GAAG,CAACO,MAAJ,CAAWK,aAAX,CAAyBF,aAAzB,CACtB,gBADsB,CAAvB;;AAGA,QAAIJ,YAAY,KAAK,KAAI,CAACH,OAAL,CAAaE,KAAlC,EAAyC;AACxCJ,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EADwC,CAGxC;;AACAM,MAAAA,UAAU,CAACK,KAAX,CAAiBC,eAAjB,GAAmC,KAAI,CAACX,OAAL,CAAaW,eAAhD;;AACA,UAAI,KAAI,CAACX,OAAL,CAAaY,YAAjB,EAA+B;AAC9BJ,QAAAA,gBAAgB,CAACK,SAAjB,GAA6B,KAAI,CAACb,OAAL,CAAaY,YAA1C;AACA,OAPuC,CAQxC;AACA;AACA;;AACA,KAXD,MAWO;AACNd,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BI,YAA/B;AACAE,MAAAA,UAAU,CAACK,KAAX,CAAiBC,eAAjB,GAAmC,EAAnC;AACAH,MAAAA,gBAAgB,CAACK,SAAjB,GAA6B,EAA7B;AACA;AACD,GAvDuB;;AACvB,MAAMC,sBAAsB,GAAGC,MAAM,CAACC,MAAP,CAC9B,EAD8B,EAC1B;AACJ;AACCf,IAAAA,IAAI,EAAE,EADP;AAECC,IAAAA,KAAK,EAAE,EAFR;AAGCS,IAAAA,eAAe,EAAE,MAHlB;AAICM,IAAAA,eAAe,EAAE,OAJlB;AAKCL,IAAAA,YAAY,EAAE;AALf,GAF8B,EAQ3B;AACHhB,EAAAA,UAT8B,CAA/B;AAWA,MAAMK,IAAI,GAAGa,sBAAsB,CAACb,IAApC;;AACA,MAAIa,sBAAsB,CAACF,YAA3B,EAAyC;AACxCE,IAAAA,sBAAsB,CAACH,eAAvB,GAAyC,KAAzC;AACA;;AAED,OAAKX,OAAL,GAAec,sBAAf;AAEAhB,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCe,sBAAzC,EAAiEb,IAAjE;;AAEA,MAAIA,IAAJ,EAAU;AACT;AACA;AACA;AACA,QAAMiB,KAAK,GAAGZ,QAAQ,CAACC,aAAT,wBAAsCN,IAAtC,SAAd;;AACA,QAAIiB,KAAJ,EAAW;AACVA,MAAAA,KAAK,CAACC,gBAAN,CAAuB,OAAvB,EAAgC,KAAKC,iBAArC;AACA;AACD;AACD,C","sourcesContent":["class SecretFieldWatcher {\n\t// setup a class variable to hold all of our configured parameters\n\toptions = {};\n\n\t// parameters will be an object literal {} containing the key-value pairs we need\n\t// known parameters: name, value, backgroundColor, errorMessage\n\t// parameters = { name: 'some name', value: 'some value',\n\t//                backgroundColor: 'some color', errorMessage: 'uh oh'}\n\tconstructor(parameters) {\n\t\tconst parametersWithDefaults = Object.assign(\n\t\t\t{}, // initial state will be {}\n\t\t\t{\n\t\t\t\tname: '',\n\t\t\t\tvalue: '',\n\t\t\t\tbackgroundColor: 'blue',\n\t\t\t\tforegroundColor: 'white',\n\t\t\t\terrorMessage: '',\n\t\t\t}, // after merging this object, will be combined version\n\t\t\tparameters\n\t\t);\n\t\tconst name = parametersWithDefaults.name;\n\t\tif (parametersWithDefaults.errorMessage) {\n\t\t\tparametersWithDefaults.backgroundColor = 'red';\n\t\t}\n\n\t\tthis.options = parametersWithDefaults;\n\n\t\tconsole.log('SecretFieldWatcher ready!', parametersWithDefaults, name);\n\n\t\tif (name) {\n\t\t\t// the old JS way:\n\t\t\t// const field = document.querySelector('input[name=\"' + name + '\"]')\n\t\t\t// the cool ES6 way:\n\t\t\tconst field = document.querySelector(`input[name=\"${name}\"]`);\n\t\t\tif (field) {\n\t\t\t\tfield.addEventListener('keyup', this.lookForFieldValue);\n\t\t\t}\n\t\t}\n\t}\n\n\tlookForFieldValue = (evt) => {\n\t\tconsole.log('looking!', this.options.name, this.options.value);\n\t\tconst currentValue = evt.target.value;\n\t\tlet background = document.querySelector('.background');\n\t\tlet errorMessageSpan = evt.target.parentElement.querySelector(\n\t\t\t'.error-message'\n\t\t);\n\t\tif (currentValue === this.options.value) {\n\t\t\tconsole.log('matched!!');\n\n\t\t\t// now react to the matched value\n\t\t\tbackground.style.backgroundColor = this.options.backgroundColor;\n\t\t\tif (this.options.errorMessage) {\n\t\t\t\terrorMessageSpan.innerHTML = this.options.errorMessage;\n\t\t\t}\n\t\t\t// 1. set the background color of the form area (white part) to the selected background color\n\t\t\t// 2. if there's an errorMessage show that in the span.error-message for this field\n\t\t\t// 3. on the next change of the field, reset the background color and empty the error field\n\t\t} else {\n\t\t\tconsole.log('did not match: ', currentValue);\n\t\t\tbackground.style.backgroundColor = '';\n\t\t\terrorMessageSpan.innerHTML = '';\n\t\t}\n\t};\n}\n"],"file":"secret-field-watcher.js"}